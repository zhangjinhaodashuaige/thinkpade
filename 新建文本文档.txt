prompt()返回的数据是字符串
length从0开始
当数组当中只有一个 数字的时候比如10 那么数组长度就是10
创建一个数组 然后直接给arra[5] 这是的数组长度是6 其他位是undefined 这种数组叫稀疏数组 arr[99999]的值是undefined
js中的函数没有重载 如果函数名字重复 后面的会覆盖前面的函数
argument 是js中的任意函数都有的 相当于实参的一个备份 所有传过来的实参都是存在于arguments这个伪数组中的 
argument是一个伪数组 伪数组就是不通过array这个构造函数创建的数组 凡是使用方法和真数组一模一样
arguments是实参个数 不是形参个数
new关键字的作用 先穿件一个空对象 将关键字this指向创建出来的空对象 执行构造函数里面的代码 给属性赋值 执行构造函数里面的代码 给属性赋值 返回穿件的对象 就是return this
input禁用事件 disable属性
push()在数组最后添加一个元素 返回新数组长度
pop()切出数组最后一个元素 返回第一个元素
unshift()在数组第一位添加一个元素
shift()删除数组第一位元素  返回第一个元素
arr.reverse()翻转数组
concat()连接两个数组 arr1.concat(arr2)
slice() 截取
placeholder文本提示 autofocus自动获取焦点
当引用类型和值类型参与运算的时候：
1. 系统会自动调用引用类型值的.valueOf()方法，获取返回值，尝试参与运算，如果可以运算，就得出结果
2. 如果无法参与运算，系统会继续调用该引用类型数据的.toString()方法，获取返回值参与运算
break 跳出整个循环，继续执行循环下面的代码
continue 跳出本次循环，继续下一次循环
异常： 会导致代码中断，出现一场之后，之后代码都不会再运行！
try{
放可能会出错的代码
console.log(a);
如果上面的代码出现异常，就不会执行下面这一句了！
console.log("这个会不会执行呢？");
}catch(e){
出现异常后的处理代码
console.log("报错了！兄弟！");
e就是出错信息
console.log(e);
}
caller 只有在函数被调用的时候才能被调用 想要获取caller值必须在函数内部使用这个属性 函数在那个函数中调用 caller就只想那个外部函数 如果函数在全局中调用 caller是null










